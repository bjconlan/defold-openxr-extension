# podman run --rm -v .:/tmp:Z,rw $(podman build -q .)

FROM docker.io/ubuntu:20.04
ARG VERSION=1.1.38
WORKDIR /root
RUN apt update\
 && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt -y install --no-install-recommends\
    build-essential\
    cmake\
    libgl1-mesa-dev\
    libvulkan-dev\
    libx11-xcb-dev\
    libxcb-dri2-0-dev\
    libxcb-glx0-dev\
    libxcb-icccm4-dev\
    libxcb-keysyms1-dev\
    libxcb-randr0-dev\
    libxrandr-dev\
    libxxf86vm-dev\
    mesa-common-dev\
    python3

#
# llvm
#
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt -y install --no-install-recommends\
    lsb-release wget software-properties-common gnupg
ENV CLANG_VERSION=17
RUN \
  echo "LLVM + CLANG ${CLANG_VERSION}" && \
  wget --no-check-certificate https://apt.llvm.org/llvm.sh && \
  chmod +x llvm.sh && \
  ./llvm.sh ${CLANG_VERSION} && \
  rm llvm.sh

ENV CLANG_17_HOME=/usr/lib/llvm-${CLANG_VERSION}
# Possibly get the "-resource-dir" from clang++ -### empty.cpp
ENV CLANG_17_RESOURCE_DIR=/usr/lib/llvm-${CLANG_VERSION}/lib/clang/${CLANG_VERSION}
ENV PATH=${CLANG_17_HOME}/bin:$PATH

ADD https://github.com/KhronosGroup/OpenXR-SDK-Source/releases/download/release-$VERSION/OpenXR-SDK-Source-release-$VERSION.tar.gz /root
RUN tar -xzf OpenXR-SDK-Source-release-$VERSION.tar.gz\
 && mkdir /root/OpenXR-SDK-Source-release-$VERSION/build\
 && cd /root/OpenXR-SDK-Source-release-$VERSION/build\
 && CXX=clang++ cmake -DDYNAMIC_LOADER=OFF -DCMAKE_BUILD_TYPE=Release -DBUILD_LOADER_WITH_EXCEPTION_HANDLING=OFF ..\
 && make
CMD cp /root/OpenXR-SDK-Source-release-*/build/src/loader/libopenxr_loader.a /tmp/.